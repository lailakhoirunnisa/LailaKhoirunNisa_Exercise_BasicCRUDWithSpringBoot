/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.CountryController;
import java.awt.event.KeyEvent;
import java.util.InputMismatchException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Country;

/**
 *
 * @author Laila
 */
public class CountryView extends javax.swing.JInternalFrame {

    private CountryController countryController = null;
    /**
     * Creates new form CountryView
     */
    public CountryView() {
        initComponents();
        countryController = new CountryController();
        loadData(countryController.binding());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputStrSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputRegion = new javax.swing.JTextField();
        inputId = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCountry = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        show_validation_id = new javax.swing.JLabel();
        show_validation_name = new javax.swing.JLabel();
        show_validation_region = new javax.swing.JLabel();

        setTitle("Country");
        setToolTipText(" ");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(40, 20));

        inputStrSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputStrSearchActionPerformed(evt);
            }
        });
        inputStrSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputStrSearchKeyPressed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel1.setText("Detail Country");

        jLabel2.setText("ID");

        jLabel3.setText("Name");

        inputRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputRegionActionPerformed(evt);
            }
        });
        inputRegion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputRegionKeyPressed(evt);
            }
        });

        inputId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputIdActionPerformed(evt);
            }
        });
        inputId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputIdKeyPressed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tbCountry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbCountry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCountryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCountry);

        jLabel4.setText("Region");

        inputName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNameActionPerformed(evt);
            }
        });
        inputName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputNameKeyPressed(evt);
            }
        });

        show_validation_id.setForeground(new java.awt.Color(255, 0, 51));
        show_validation_id.setText(" ");

        show_validation_name.setForeground(new java.awt.Color(204, 0, 0));
        show_validation_name.setText(" ");

        show_validation_region.setForeground(new java.awt.Color(255, 0, 51));
        show_validation_region.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel4)
                                                    .addGap(18, 18, 18))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel3)
                                                    .addGap(24, 24, 24)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(40, 40, 40)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(show_validation_name))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(inputRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(show_validation_region))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(inputId, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(show_validation_id))))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(inputStrSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(29, 29, 29)
                                    .addComponent(btnSearch))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(39, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputStrSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(show_validation_id))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(show_validation_name))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(show_validation_region))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(22, 22, 22))
        );

        getAccessibleContext().setAccessibleName("vwCountry");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputStrSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputStrSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputStrSearchActionPerformed

    private void inputRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputRegionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputRegionActionPerformed

    private void inputIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputIdActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_inputIdActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
//membuat confirm dialog sebelum data disimpan
        int YesOrNo = JOptionPane.showConfirmDialog(null, "Anda yakin akan menyimpan data ini?", "Simpan data", JOptionPane.YES_NO_OPTION);
String id = inputId.getText();
String name = inputName.getText();
String region = inputRegion.getText();
if (YesOrNo ==0){


        String message = countryController.controller_save(id, name, region);
        JOptionPane.showMessageDialog(this, message, "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
        loadData(countryController.binding());

}
else if (YesOrNo ==1 ){
       
    
        // TODO add your handling code here:
}

//int region1 = Integer.parseInt(region);
//String message = countryController.controller_save(id, name, region);
//        JOptionPane.showMessageDialog(this, message, "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
//        loadData(countryController.binding());
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

//menampilan confirm dialog sebelum update data
int YesOrNo = JOptionPane.showConfirmDialog(null, "Anda yakin akan menyimpan data ini?", "Simpan data", JOptionPane.YES_NO_OPTION);
String id = inputId.getText();
String name = inputName.getText();
String region = inputRegion.getText();
if (YesOrNo ==0){


        String message = countryController.controller_update(id, name, region);
        JOptionPane.showMessageDialog(this, message, "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
        loadData(countryController.binding());

}
else if (YesOrNo ==1 ){
       
    
        // TODO add your handling code here:
}
//you may used this, dont delete it
//int region = Integer.parseInt(region1);

//String message = countryController.saveupdate(id, name);
//        JOptionPane.showMessageDialog(this, message, "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
//loadData(countryController.binding());
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
//menampilkan confirm dialog sebelum menghapus data
int YesOrNo = JOptionPane.showConfirmDialog(null, "Anda yakin akan menyimpan data ini?", "Simpan data", JOptionPane.YES_NO_OPTION);
//String name = inputName.getText();
//String message = countryController.savedelete(id);
if (YesOrNo ==0){

//    JOptionPane.showConfirmDialog(null, "Data Tersimpan", "Simpan data", JOptionPane.OK_OPTION);
        
JOptionPane.showMessageDialog(this, countryController.controller_delete(inputId.getText()), "Hapus data", JOptionPane.ERROR_MESSAGE);
loadData(countryController.binding());
//String message = countryController.controller_update(id, name, region);
//        JOptionPane.showMessageDialog(this, message, "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
//        loadData(countryController.binding());

}
else if (YesOrNo ==1 ){
       
    
        
} 

        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

       
        String keyword = "%"+inputStrSearch.getText()+"%";


loadData(countryController.controller_search(keyword));


        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tbCountryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCountryMouseClicked

        //mengambil data dari row 1, 2, dan 3 untuk ditarok di kotak input id, nama, dan region
        int row =tbCountry.getSelectedRow();
String id =tbCountry.getValueAt(row, 0).toString();
String name =tbCountry.getValueAt(row, 1).toString();
String region =tbCountry.getValueAt(row, 2).toString();

inputId.setText(id);
inputName.setText(name);
inputRegion.setText(region);
        // TODO add your handling code here:
    }//GEN-LAST:event_tbCountryMouseClicked

    private void inputNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNameActionPerformed

    private void inputStrSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputStrSearchKeyPressed

//       membuat fungsi keypressed saat mengetikkan kata pada kolom search dan menekan enter akan tetap melakukan fungsi search, 
//       tanpa harus klik button search
if(evt.getKeyCode()== KeyEvent.VK_ENTER);
String keyword = "%"+inputStrSearch.getText()+"%";
loadData(countryController.controller_search(keyword));
        // TODO add your handling code here:
    }//GEN-LAST:event_inputStrSearchKeyPressed

    private void inputIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputIdKeyPressed
        // membuat agar input Id hanya boleh huruf
        
        char c= evt.getKeyChar();
if(Character.isLetter(c)){
    show_validation_id.setText("");
}
else if(Character.isDigit(c)){
    show_validation_id.setText("Tolong masukkan huruf");
}
else{
    show_validation_id.setText("Tolong masukkan huruf");
    
}
    }//GEN-LAST:event_inputIdKeyPressed

    private void inputNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNameKeyPressed
        // membuat agar input name hanya boleh huruf
         char c= evt.getKeyChar();
if(Character.isLetter(c)){
    show_validation_name.setText("");
}
else if(Character.isDigit(c)){
    show_validation_name.setText("Tolong masukkan huruf");
}
else{
    show_validation_name.setText("Tolong masukkan huruf");
    
}
    }//GEN-LAST:event_inputNameKeyPressed

    private void inputRegionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputRegionKeyPressed
        //membuat agar input region hanya boleh angka
         char c= evt.getKeyChar();
if(Character.isDigit(c)){
    show_validation_region.setText("");
}
else if(Character.isLetter(c)){
    show_validation_region.setText("Tolong masukkan angka");
}
else{
    show_validation_region.setText("Tolong masukkan angka");
    
}
    }//GEN-LAST:event_inputRegionKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JToggleButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField inputId;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField inputRegion;
    private javax.swing.JTextField inputStrSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel show_validation_id;
    private javax.swing.JLabel show_validation_name;
    private javax.swing.JLabel show_validation_region;
    private javax.swing.JTable tbCountry;
    // End of variables declaration//GEN-END:variables

    private void loadData(List<Country> countrys){
        String header[] = {"Id", "Name", "Region"};
        String [][] data = new String[countrys.size()][3];
        
//    String data[] = new String[countrys.size()][2];
        for (int i = 0; i < data.length; i++) {
//            String string = data[i];

data[i][0]= countrys.get(i).getId();
data[i][1]= countrys.get(i).getName();
data[i][2]= countrys.get(i).getRegion()+"";
          
        }
        DefaultTableModel defaultTableModel = new DefaultTableModel(data, header);
       tbCountry.setModel(defaultTableModel);
}
}
